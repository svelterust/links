# Links Project - Technology Stack

## Project Overview
- **Project Name**: Links
- **Type**: Phoenix LiveView web application

## Core Framework
- **Elixir ~> 1.15** - Functional programming language
- **Phoenix ~> 1.8.0-rc.3** - Web framework
- **Phoenix LiveView ~> 1.0.9** - Real-time web features

## Database
- **Ecto SQL ~> 3.10** - Database wrapper and query generator
- **SQLite3** - Database (via ecto_sqlite3)

## Frontend
- **Phoenix HTML ~> 4.1** - HTML helpers
- **Tailwind CSS ~> 0.3** - Utility-first CSS framework
- **daisyUI v5** - Tailwind CSS component library with light/dark themes
- **ESBuild ~> 0.9** - JavaScript bundler
- **Heroicons v2.1.1** - SVG icon library

## HTTP & External Communication
- **Bandit ~> 1.5** - HTTP server
- **Req ~> 0.5** - HTTP client
- **Swoosh ~> 1.16** - Email library

## Development & Testing
- **Phoenix Live Reload ~> 1.2** - Hot reloading for development
- **Floki >= 0.30.0** - HTML parser for testing
- **Jason ~> 1.2** - JSON parser

## Monitoring & Operations
- **Telemetry Metrics ~> 1.0** - Application metrics
- **Telemetry Poller ~> 1.0** - Periodic measurements
- **DNS Cluster ~> 0.1.1** - Service discovery

## Project Structure
- Standard Phoenix application with LiveView support
- SQLite database for persistence
- Asset pipeline with Tailwind CSS and ESBuild
- Configured for both development and production environments

## Rules
- When you want to test the project is running, use `mix test` or `mix compile`
- Do not use `mix phx.server`, because this gets you stuck waiting for the server
- Don't create extra notes or README.md files, it's not needed
- Use Heroicons instead of manual SVG icons
